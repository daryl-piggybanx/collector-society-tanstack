/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as EthosImport } from './routes/ethos'
import { Route as IndexImport } from './routes/index'
import { Route as CollectorIndexImport } from './routes/collector.index'
import { Route as PlayLeaderboardImport } from './routes/play.leaderboard'
import { Route as PlayFlappyPigImport } from './routes/play.flappy-pig'
import { Route as DemoTanstackQueryImport } from './routes/demo.tanstack-query'
import { Route as DemoHoloCardsImport } from './routes/demo.holo-cards'
import { Route as CollectorUpdateImport } from './routes/collector.update'
import { Route as CollectorReservationImport } from './routes/collector.reservation'
import { Route as CollectorOgImport } from './routes/collector.og'
import { Route as CollectorNewImport } from './routes/collector.new'
import { Route as CollectorDiscordImport } from './routes/collector.discord'

// Create/Update Routes

const EthosRoute = EthosImport.update({
  id: '/ethos',
  path: '/ethos',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CollectorIndexRoute = CollectorIndexImport.update({
  id: '/collector/',
  path: '/collector/',
  getParentRoute: () => rootRoute,
} as any)

const PlayLeaderboardRoute = PlayLeaderboardImport.update({
  id: '/play/leaderboard',
  path: '/play/leaderboard',
  getParentRoute: () => rootRoute,
} as any)

const PlayFlappyPigRoute = PlayFlappyPigImport.update({
  id: '/play/flappy-pig',
  path: '/play/flappy-pig',
  getParentRoute: () => rootRoute,
} as any)

const DemoTanstackQueryRoute = DemoTanstackQueryImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRoute,
} as any)

const DemoHoloCardsRoute = DemoHoloCardsImport.update({
  id: '/demo/holo-cards',
  path: '/demo/holo-cards',
  getParentRoute: () => rootRoute,
} as any)

const CollectorUpdateRoute = CollectorUpdateImport.update({
  id: '/collector/update',
  path: '/collector/update',
  getParentRoute: () => rootRoute,
} as any)

const CollectorReservationRoute = CollectorReservationImport.update({
  id: '/collector/reservation',
  path: '/collector/reservation',
  getParentRoute: () => rootRoute,
} as any)

const CollectorOgRoute = CollectorOgImport.update({
  id: '/collector/og',
  path: '/collector/og',
  getParentRoute: () => rootRoute,
} as any)

const CollectorNewRoute = CollectorNewImport.update({
  id: '/collector/new',
  path: '/collector/new',
  getParentRoute: () => rootRoute,
} as any)

const CollectorDiscordRoute = CollectorDiscordImport.update({
  id: '/collector/discord',
  path: '/collector/discord',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/ethos': {
      id: '/ethos'
      path: '/ethos'
      fullPath: '/ethos'
      preLoaderRoute: typeof EthosImport
      parentRoute: typeof rootRoute
    }
    '/collector/discord': {
      id: '/collector/discord'
      path: '/collector/discord'
      fullPath: '/collector/discord'
      preLoaderRoute: typeof CollectorDiscordImport
      parentRoute: typeof rootRoute
    }
    '/collector/new': {
      id: '/collector/new'
      path: '/collector/new'
      fullPath: '/collector/new'
      preLoaderRoute: typeof CollectorNewImport
      parentRoute: typeof rootRoute
    }
    '/collector/og': {
      id: '/collector/og'
      path: '/collector/og'
      fullPath: '/collector/og'
      preLoaderRoute: typeof CollectorOgImport
      parentRoute: typeof rootRoute
    }
    '/collector/reservation': {
      id: '/collector/reservation'
      path: '/collector/reservation'
      fullPath: '/collector/reservation'
      preLoaderRoute: typeof CollectorReservationImport
      parentRoute: typeof rootRoute
    }
    '/collector/update': {
      id: '/collector/update'
      path: '/collector/update'
      fullPath: '/collector/update'
      preLoaderRoute: typeof CollectorUpdateImport
      parentRoute: typeof rootRoute
    }
    '/demo/holo-cards': {
      id: '/demo/holo-cards'
      path: '/demo/holo-cards'
      fullPath: '/demo/holo-cards'
      preLoaderRoute: typeof DemoHoloCardsImport
      parentRoute: typeof rootRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryImport
      parentRoute: typeof rootRoute
    }
    '/play/flappy-pig': {
      id: '/play/flappy-pig'
      path: '/play/flappy-pig'
      fullPath: '/play/flappy-pig'
      preLoaderRoute: typeof PlayFlappyPigImport
      parentRoute: typeof rootRoute
    }
    '/play/leaderboard': {
      id: '/play/leaderboard'
      path: '/play/leaderboard'
      fullPath: '/play/leaderboard'
      preLoaderRoute: typeof PlayLeaderboardImport
      parentRoute: typeof rootRoute
    }
    '/collector/': {
      id: '/collector/'
      path: '/collector'
      fullPath: '/collector'
      preLoaderRoute: typeof CollectorIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/ethos': typeof EthosRoute
  '/collector/discord': typeof CollectorDiscordRoute
  '/collector/new': typeof CollectorNewRoute
  '/collector/og': typeof CollectorOgRoute
  '/collector/reservation': typeof CollectorReservationRoute
  '/collector/update': typeof CollectorUpdateRoute
  '/demo/holo-cards': typeof DemoHoloCardsRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/play/flappy-pig': typeof PlayFlappyPigRoute
  '/play/leaderboard': typeof PlayLeaderboardRoute
  '/collector': typeof CollectorIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/ethos': typeof EthosRoute
  '/collector/discord': typeof CollectorDiscordRoute
  '/collector/new': typeof CollectorNewRoute
  '/collector/og': typeof CollectorOgRoute
  '/collector/reservation': typeof CollectorReservationRoute
  '/collector/update': typeof CollectorUpdateRoute
  '/demo/holo-cards': typeof DemoHoloCardsRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/play/flappy-pig': typeof PlayFlappyPigRoute
  '/play/leaderboard': typeof PlayLeaderboardRoute
  '/collector': typeof CollectorIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/ethos': typeof EthosRoute
  '/collector/discord': typeof CollectorDiscordRoute
  '/collector/new': typeof CollectorNewRoute
  '/collector/og': typeof CollectorOgRoute
  '/collector/reservation': typeof CollectorReservationRoute
  '/collector/update': typeof CollectorUpdateRoute
  '/demo/holo-cards': typeof DemoHoloCardsRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/play/flappy-pig': typeof PlayFlappyPigRoute
  '/play/leaderboard': typeof PlayLeaderboardRoute
  '/collector/': typeof CollectorIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/ethos'
    | '/collector/discord'
    | '/collector/new'
    | '/collector/og'
    | '/collector/reservation'
    | '/collector/update'
    | '/demo/holo-cards'
    | '/demo/tanstack-query'
    | '/play/flappy-pig'
    | '/play/leaderboard'
    | '/collector'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/ethos'
    | '/collector/discord'
    | '/collector/new'
    | '/collector/og'
    | '/collector/reservation'
    | '/collector/update'
    | '/demo/holo-cards'
    | '/demo/tanstack-query'
    | '/play/flappy-pig'
    | '/play/leaderboard'
    | '/collector'
  id:
    | '__root__'
    | '/'
    | '/ethos'
    | '/collector/discord'
    | '/collector/new'
    | '/collector/og'
    | '/collector/reservation'
    | '/collector/update'
    | '/demo/holo-cards'
    | '/demo/tanstack-query'
    | '/play/flappy-pig'
    | '/play/leaderboard'
    | '/collector/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EthosRoute: typeof EthosRoute
  CollectorDiscordRoute: typeof CollectorDiscordRoute
  CollectorNewRoute: typeof CollectorNewRoute
  CollectorOgRoute: typeof CollectorOgRoute
  CollectorReservationRoute: typeof CollectorReservationRoute
  CollectorUpdateRoute: typeof CollectorUpdateRoute
  DemoHoloCardsRoute: typeof DemoHoloCardsRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  PlayFlappyPigRoute: typeof PlayFlappyPigRoute
  PlayLeaderboardRoute: typeof PlayLeaderboardRoute
  CollectorIndexRoute: typeof CollectorIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EthosRoute: EthosRoute,
  CollectorDiscordRoute: CollectorDiscordRoute,
  CollectorNewRoute: CollectorNewRoute,
  CollectorOgRoute: CollectorOgRoute,
  CollectorReservationRoute: CollectorReservationRoute,
  CollectorUpdateRoute: CollectorUpdateRoute,
  DemoHoloCardsRoute: DemoHoloCardsRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  PlayFlappyPigRoute: PlayFlappyPigRoute,
  PlayLeaderboardRoute: PlayLeaderboardRoute,
  CollectorIndexRoute: CollectorIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/ethos",
        "/collector/discord",
        "/collector/new",
        "/collector/og",
        "/collector/reservation",
        "/collector/update",
        "/demo/holo-cards",
        "/demo/tanstack-query",
        "/play/flappy-pig",
        "/play/leaderboard",
        "/collector/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/ethos": {
      "filePath": "ethos.tsx"
    },
    "/collector/discord": {
      "filePath": "collector.discord.tsx"
    },
    "/collector/new": {
      "filePath": "collector.new.tsx"
    },
    "/collector/og": {
      "filePath": "collector.og.tsx"
    },
    "/collector/reservation": {
      "filePath": "collector.reservation.tsx"
    },
    "/collector/update": {
      "filePath": "collector.update.tsx"
    },
    "/demo/holo-cards": {
      "filePath": "demo.holo-cards.tsx"
    },
    "/demo/tanstack-query": {
      "filePath": "demo.tanstack-query.tsx"
    },
    "/play/flappy-pig": {
      "filePath": "play.flappy-pig.tsx"
    },
    "/play/leaderboard": {
      "filePath": "play.leaderboard.tsx"
    },
    "/collector/": {
      "filePath": "collector.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
